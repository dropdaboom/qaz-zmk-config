/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define NUM_SYM 1
#define NAV     2
#define BT      3

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        enter {
            bindings = <&kp RETURN>;
            key-positions = <18 19>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };

        Rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <27 28>;
        };

        off-button {
            bindings = <&soft_off>;
            key-positions = <10 11 12 13 19 18 17 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            //   |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |   P   |
            //   |A/CAPS |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  '  |
            //   | Z/LSHIFT|X/RS |  C  |  V  |  B  |  N  |  M  |  ,  |  ./L3   |
            //   |CTRL | WIN | ALT |  SPACE/L1   | SPACE/L2  |RIGHT|DOWN |LEFT |

            bindings = <
&kp Q         &kp W         &kp E     &kp R        &kp T        &kp Y     &kp U     &kp I      &kp O      &kp P
&kp A         &kp S         &kp D     &kp F        &kp G        &kp H     &kp J     &kp K      &kp L      &kp APOS
&mt RSHIFT Z  &mt RSHIFT X  &kp C     &kp V        &kp B        &kp N     &kp M     &kp UP     &lt 3 DOT
&kp LCTRL     &kp LGUI      &kp LALT  &lt 1 SPACE  &lt 2 SPACE  &kp LEFT  &kp DOWN  &kp RIGHT
            >;
        };

        num_sym {
            //   |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |   0   |
            //   |       |     |     |  `  |  \  |  {  |  }  |  -  |  =  |  '  |
            //   |         |     |     |     |     |     |     |  UP  | RSHIFT |
            //   |CTRL | WIN | ALT |  SPACE/L1   | SPACE/L2  |RIGHT|DOWN |LEFT |

            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4     &kp N5    &kp N6    &kp N7    &kp N8     &kp N9     &kp N0
&trans  &trans  &trans  &kp GRAVE  &kp BSLH  &kp LBKT  &kp RBKT  &kp MINUS  &kp EQUAL  &kp SEMI
&trans  &none   &none   &none      &none     &none     &none     &kp COMMA  &kp FSLH
&trans  &trans  &trans  &trans     &trans    &trans    &trans    &trans
            >;
        };

        nav {
            //   | ESC | F1  | F2  | F3  | F4  | F5  | F6  | F7  | F8  | BKSP  |
            //   |  TAB  |CAPS |     |     |     |  F9  | F10 | F11 |F12 |ENTER|
            //   |  SHIFT  |     |     |     |     |     |     |  UP | RSHIFT  |
            //   |CTRL | WIN | ALT |  SPACE/L1   | SPACE/L2  |LEFT|DOWN |RIGHT |

            bindings = <
&kp ESC  &kp F1    &kp F2  &kp F3  &kp F4  &kp F5  &kp F6   &kp F7   &kp F8      &kp BSPC
&kp TAB  &kp CAPS  &none   &none   &none   &kp F9  &kp F10  &kp F11  &kp F12     &kp RET
&none    &none     &none   &none   &none   &none   &none    &kp UP   &kp RSHIFT
&trans   &trans    &trans  &trans  &trans  &trans  &trans   &trans
            >;
        };

        bt {
            //   |     |     |     |     |     |     |     |     |      |      |
            //   |       |     |     |     |     | F9  | F10 | F11 | F12 |BTCLR|
            //   |               |     |     |     |     |     |     |         |
            //   |CTRL | WIN | ALT |  SPACE/L1   | SPACE/L2 |     |     |      |

            bindings = <
&none   &none         &none         &none   &none   &none       &none         &none         &none  &none
&none   &bt BT_SEL 0  &bt BT_SEL 1  &none   &none   &none       &none         &none         &none  &bt BT_CLR
&none   &kp CAPS      &none         &none   &none   &none       &kp C_VOL_DN  &kp C_VOL_UP  &none
&trans  &trans        &trans        &trans  &trans  &kp C_PREV  &kp C_PP      &kp C_NEXT
            >;
        };
    };
};
